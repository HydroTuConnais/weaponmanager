// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String
  emailVerified Boolean   @default(false)
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  weapons       Weapon[]
  weaponLogs    WeaponLog[]
  sessions      Session[]
  accounts      Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  accountId         String
  providerId        String
  accessToken       String?
  refreshToken      String?
  idToken           String?
  accessTokenExpiresAt DateTime?
  refreshTokenExpiresAt DateTime?
  scope             String?
  password          String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([providerId, accountId])
}

model Session {
  id           String   @id @default(cuid())
  expiresAt    DateTime
  token        String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  ipAddress    String?
  userAgent    String?
  userId       String

  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Verification {
  id         String   @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, value])
}

model WeaponType {
  id          String   @id @default(cuid())
  name        String   @unique
  image       String   // Chemin vers l'image
  category    String?  // Cat√©gorie (Fusil d'assaut, Pistolet, etc.)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  weapons     Weapon[]
}

model Weapon {
  id              String      @id @default(cuid())
  serialNumber    String      @unique
  name            String
  weaponTypeId    String
  description     String?
  status          WeaponStatus @default(AVAILABLE)
  ammunition      Int         @default(0)
  assignedToId    String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  weaponType      WeaponType  @relation(fields: [weaponTypeId], references: [id])
  assignedTo      User?       @relation(fields: [assignedToId], references: [id])
  logs            WeaponLog[]
}

model WeaponLog {
  id          String      @id @default(cuid())
  weaponId    String
  userId      String
  action      LogAction
  timestamp   DateTime    @default(now())
  notes       String?

  weapon      Weapon      @relation(fields: [weaponId], references: [id], onDelete: Cascade)
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

enum WeaponStatus {
  AVAILABLE
  ASSIGNED
  MAINTENANCE
  RETIRED
}

enum LogAction {
  ASSIGNED
  RETURNED
  MAINTENANCE_START
  MAINTENANCE_END
  CREATED
  UPDATED
  DELETED
}
